/* * Author: Matt Tacchino *  * Function to create example table. Contains a list of sudoku tables to cycle through  * Starts at a random puzzle, then cycles through all remaining puzzles in order * */var createExamplePuzzle = createExamplePuzzleFunction();// closure function to return function for creating example sudokutablesfunction createExamplePuzzleFunction(){		var NUM_OF_EXAMPLE_TABLES = 5;	var tableNum = parseInt(Math.random() * NUM_OF_EXAMPLE_TABLES);		function func(){		var sudokuTable = new SudokuTable();		tableNum = (tableNum + 1) % NUM_OF_EXAMPLE_TABLES;		if (tableNum == 0){			sudokuTable.table[0][0].setAnswer(9);			sudokuTable.table[2][0].setAnswer(5);			sudokuTable.table[1][1].setAnswer(6);			sudokuTable.table[2][1].setAnswer(3);			sudokuTable.table[6][1].setAnswer(5);			sudokuTable.table[8][1].setAnswer(8);			sudokuTable.table[0][2].setAnswer(2);			sudokuTable.table[2][2].setAnswer(4);			sudokuTable.table[3][2].setAnswer(8);			sudokuTable.table[5][2].setAnswer(9);			sudokuTable.table[3][3].setAnswer(1);			sudokuTable.table[4][3].setAnswer(8);			sudokuTable.table[6][3].setAnswer(2);			sudokuTable.table[8][3].setAnswer(3);			sudokuTable.table[1][4].setAnswer(7);			sudokuTable.table[2][4].setAnswer(1);			sudokuTable.table[3][4].setAnswer(5);			sudokuTable.table[5][4].setAnswer(2);			sudokuTable.table[6][4].setAnswer(6);			sudokuTable.table[7][4].setAnswer(8);			sudokuTable.table[0][5].setAnswer(5);			sudokuTable.table[2][5].setAnswer(8);			sudokuTable.table[4][5].setAnswer(4);			sudokuTable.table[5][5].setAnswer(3);			sudokuTable.table[3][6].setAnswer(2);			sudokuTable.table[5][6].setAnswer(5);			sudokuTable.table[6][6].setAnswer(7);			sudokuTable.table[8][6].setAnswer(6);			sudokuTable.table[0][7].setAnswer(1);			sudokuTable.table[2][7].setAnswer(2);			sudokuTable.table[6][7].setAnswer(8);			sudokuTable.table[7][7].setAnswer(3);			sudokuTable.table[6][8].setAnswer(4);			sudokuTable.table[8][8].setAnswer(5);		}		else if (tableNum == 1){			sudokuTable.table[6][0].setAnswer(4);			sudokuTable.table[8][0].setAnswer(3);			sudokuTable.table[4][1].setAnswer(1);			sudokuTable.table[3][2].setAnswer(9);			sudokuTable.table[5][2].setAnswer(3);			sudokuTable.table[7][2].setAnswer(8);			sudokuTable.table[8][2].setAnswer(1);			sudokuTable.table[2][3].setAnswer(3);			sudokuTable.table[4][3].setAnswer(2);			sudokuTable.table[5][3].setAnswer(9);			sudokuTable.table[7][3].setAnswer(7);			sudokuTable.table[8][3].setAnswer(5);			sudokuTable.table[2][4].setAnswer(8);			sudokuTable.table[3][4].setAnswer(7);			sudokuTable.table[5][4].setAnswer(5);			sudokuTable.table[6][4].setAnswer(1);			sudokuTable.table[0][5].setAnswer(5);			sudokuTable.table[1][5].setAnswer(9);			sudokuTable.table[3][5].setAnswer(1);			sudokuTable.table[4][5].setAnswer(4);			sudokuTable.table[6][5].setAnswer(2);			sudokuTable.table[0][6].setAnswer(7);			sudokuTable.table[1][6].setAnswer(8);			sudokuTable.table[3][6].setAnswer(2);			sudokuTable.table[5][6].setAnswer(6);			sudokuTable.table[4][7].setAnswer(9);			sudokuTable.table[0][8].setAnswer(6);			sudokuTable.table[2][8].setAnswer(1);		}		else if (tableNum == 2){			sudokuTable.table[0][0].setAnswer(1);			sudokuTable.table[0][1].setAnswer(2);			sudokuTable.table[0][2].setAnswer(3);			sudokuTable.table[0][3].setAnswer(4);			sudokuTable.table[0][4].setAnswer(5);			sudokuTable.table[0][5].setAnswer(6);			sudokuTable.table[0][6].setAnswer(7);			sudokuTable.table[0][7].setAnswer(8);			sudokuTable.table[0][8].setAnswer(9);			sudokuTable.table[1][0].setAnswer(4);			sudokuTable.table[1][1].setAnswer(5);			sudokuTable.table[1][2].setAnswer(6);			sudokuTable.table[1][3].setAnswer(7);			sudokuTable.table[1][4].setAnswer(8);			sudokuTable.table[1][5].setAnswer(9);		}		else if (tableNum == 3){			sudokuTable.table[0][1].setAnswer(4);			sudokuTable.table[0][2].setAnswer(7);			sudokuTable.table[0][3].setAnswer(2);			sudokuTable.table[0][7].setAnswer(9);			sudokuTable.table[0][8].setAnswer(6);			sudokuTable.table[1][6].setAnswer(4);			sudokuTable.table[1][7].setAnswer(8);			sudokuTable.table[2][1].setAnswer(1);			sudokuTable.table[2][3].setAnswer(3);			sudokuTable.table[2][4].setAnswer(8);			sudokuTable.table[2][6].setAnswer(5);			sudokuTable.table[2][8].setAnswer(7);			sudokuTable.table[3][4].setAnswer(3);			sudokuTable.table[3][5].setAnswer(6);			sudokuTable.table[3][6].setAnswer(2);			sudokuTable.table[4][1].setAnswer(9);			sudokuTable.table[4][2].setAnswer(1);			sudokuTable.table[4][3].setAnswer(4);			sudokuTable.table[4][5].setAnswer(5);			sudokuTable.table[4][6].setAnswer(6);			sudokuTable.table[4][7].setAnswer(3);			sudokuTable.table[5][2].setAnswer(6);			sudokuTable.table[5][3].setAnswer(8);			sudokuTable.table[5][4].setAnswer(1);			sudokuTable.table[6][0].setAnswer(4);			sudokuTable.table[6][2].setAnswer(3);			sudokuTable.table[6][4].setAnswer(2);			sudokuTable.table[6][5].setAnswer(8);			sudokuTable.table[6][7].setAnswer(5);			sudokuTable.table[7][1].setAnswer(7);			sudokuTable.table[7][2].setAnswer(2);			sudokuTable.table[8][0].setAnswer(9);			sudokuTable.table[8][1].setAnswer(5);			sudokuTable.table[8][5].setAnswer(3);			sudokuTable.table[8][6].setAnswer(1);			sudokuTable.table[8][7].setAnswer(6);		}		else if (tableNum == 4){			sudokuTable.table[1][1].setAnswer(1);			sudokuTable.table[1][2].setAnswer(2);			sudokuTable.table[1][3].setAnswer(5);			sudokuTable.table[1][4].setAnswer(3);			sudokuTable.table[1][5].setAnswer(7);			sudokuTable.table[1][6].setAnswer(8);			sudokuTable.table[1][7].setAnswer(9);			sudokuTable.table[2][1].setAnswer(4);			sudokuTable.table[2][7].setAnswer(3);			sudokuTable.table[3][1].setAnswer(6);			sudokuTable.table[3][7].setAnswer(7);			sudokuTable.table[4][1].setAnswer(5);			sudokuTable.table[4][7].setAnswer(2);			sudokuTable.table[5][1].setAnswer(8);			sudokuTable.table[5][7].setAnswer(1);			sudokuTable.table[6][1].setAnswer(2);			sudokuTable.table[6][7].setAnswer(6);			sudokuTable.table[7][1].setAnswer(9);			sudokuTable.table[7][2].setAnswer(6);			sudokuTable.table[7][3].setAnswer(3);			sudokuTable.table[7][4].setAnswer(1);			sudokuTable.table[7][5].setAnswer(2);			sudokuTable.table[7][6].setAnswer(7);			sudokuTable.table[7][7].setAnswer(4);		}		else if (tableNum == 5){			sudokuTable.table[0][1].setAnswer(6);			sudokuTable.table[0][5].setAnswer(3);			sudokuTable.table[0][7].setAnswer(5);			sudokuTable.table[0][8].setAnswer(1);			sudokuTable.table[1][6].setAnswer(8);			sudokuTable.table[1][8].setAnswer(4);			sudokuTable.table[2][1].setAnswer(4);			sudokuTable.table[2][5].setAnswer(5);			sudokuTable.table[2][7].setAnswer(3);			sudokuTable.table[3][0].setAnswer(7);			sudokuTable.table[3][2].setAnswer(2);			sudokuTable.table[3][5].setAnswer(8);			sudokuTable.table[4][0].setAnswer(3);			sudokuTable.table[4][8].setAnswer(6);			sudokuTable.table[5][3].setAnswer(9);			sudokuTable.table[5][6].setAnswer(3);			sudokuTable.table[5][8].setAnswer(7);			sudokuTable.table[6][1].setAnswer(2);			sudokuTable.table[6][3].setAnswer(8);			sudokuTable.table[6][7].setAnswer(6);			sudokuTable.table[7][0].setAnswer(4);			sudokuTable.table[7][2].setAnswer(6);			sudokuTable.table[8][0].setAnswer(9);			sudokuTable.table[8][1].setAnswer(3);			sudokuTable.table[8][3].setAnswer(7);			sudokuTable.table[8][7].setAnswer(2);		}		return sudokuTable;	};	return func;}